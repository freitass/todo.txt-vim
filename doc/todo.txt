*todo.txt*	Vim plugin for Todo.txt files
                     _____         _       _        _   ~
                    |_   _|__   __| | ___ | |___  _| |_ ~
                      | |/ _ \ / _` |/ _ \| __\ \/ / __|~
                      | | (_) | (_| | (_) | |_ >  <| |_ ~
                      |_|\___/ \__,_|\___(_)__/_/\_\\__|~

                              Reference Manual~

==============================================================================
CONTENTS                                                       *todo-contents*

	1. Commands ..................................... |todo-commands|
		1.1. Sorting tasks ............................ |todo-commands-sorting|
		1.2. Edit priority ............................ |todo-commands-priority|
		1.3. Date ..................................... |todo-commands-date|
		1.4. Mark as done ............................. |todo-commands-done|
	2. Options ...................................... |todo-options|

==============================================================================
1. Commands                                                    *todo-commands*

1.1 Sorting tasks:                                     *todo-commands-sorting*
	`<localleader>s`   Sort the file
	`<localleader>s+`  Sort the file on +Projects
	`<localleader>s@`  Sort the file on @Contexts
	`<localleader>sd`  Sort the file on dates
	`<localleader>sdd` Sort the file on due dates (i.e. due:2015-10-25)
	<localleader>sdt Sort the file on due dates (i.e. t:2015-10-25)

1.2 Edit priority:                                    *todo-commands-priority*
	`<localleader>j`   Decrease the priority of the current line
	`<localleader>k`   Increase the priority of the current line
	`<localleader>a`   Add the priority (A) to the current line
	`<localleader>b`   Add the priority (B) to the current line
	`<localleader>c`   Add the priority (C) to the current line

1.3 Date:                                                 *todo-commands-date*
	`<localleader>d`   Set current task's creation date to the current date
	`date<tab>`        (Insert mode) Insert the current date

1.4 Mark as done:                                         *todo-commands-done*
	`<localleader>x`   Mark current task as done
	`<localleader>X`   Mark all tasks as done
	`<localleader>D`   Move completed tasks to done.txt

See :h <localleader> for more information about the commands' prefix.

==============================================================================
2. Options                                                      *todo-options*

                                                      *'g:todo_existing_date'*
Specify the behavior of date insertion functions when the task already has a
date of creation: >
  let g:todo_existing_date = 'n'
<
  r - replace existing date (default)
  n - do nothing

                                                      *'g:todo_load_python'*
Specify if the plugin should load the python module. Useful if you use Neovim
for example or if perhaps you just don't have/want python for vim: >
  let g:todo_load_python = 1
<
  1 - Load (default)
  0 - Don't load

                                                      *'g:todo_done_filename'*
Specify a custom filename for completed todo entries to be archived to. Useful
for compatibility with other todo.txt editors, or as a matter of preference:
  let g:todo_done_filename = 'completed.txt'

   Default: Done.txt or done.txt based on todo.txt capitalization.

===============================================================================
vim:ft=help:et:ts=2:sw=2:sts=2:norl
